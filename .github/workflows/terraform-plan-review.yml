name: Terraform Plan Review

on: [push, pull_request]

# We are passing service account json key secret in GOOGLE_CREDENTIALS
env:
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

permissions:
  actions: write
  contents: read

jobs:
  # We use this pre-job to avoid running duplicate workflows on Pull Requests
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'outdated_runs'
          skip_after_successful_duplicate: false

  plan:
    # This Job produces a Plan so the Developer to see what to expect from his changes.
    needs: pre_job
    name: Terraform Plan Review
    runs-on: ubuntu-latest
    permissions: write-all
    if: github.ref != 'refs/heads/master' && needs.pre_job.outputs.should_skip != 'true'
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Init
        id : init
        run: terraform init

      - name: Validate Terraform
        id: validate
        run: terraform validate

      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tf_plan -var 'app_version=${{steps.short-sha.outputs.sha}}'
          terraform show -no-color tf_plan > tf_plan.txt

        # If the push is done on a PR, then the following job will add a comment to the PR attaching the plan for review.
      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN_FILE: terraform/tf_plan.txt
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync(process.env.PLAN_FILE, 'utf8');
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform\n
            
            ${plan}
            
            \`\`\`
            
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
