name: Terraform CI/CD

on:
  push:
    branches:
      - master
  pull_request:

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Init
        id : init
        run: terraform init

      - name: Validate Terraform
        id: validate
        run: terraform validate

      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tf_plan -var 'app_version=${{steps.short-sha.outputs.sha}}'

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Upload plan
        uses: actions/upload-artifact@v3
        with:
          name: tf-plan
          path: ./terraform/tf_plan
          if-no-files-found: error

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false


#  apply:
#    name: Terraform Apply
#    runs-on: ubuntu-latest
#    needs: plan
#    defaults:
#      run:
#        working-directory: terraform
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v3
#
#    - name: Terraform Init
#      run: terraform init
#
#    - name: Download artifact
#      uses: actions/download-artifact@v3
#      with:
#        name: tf-plan
#
#    - name: Terraform Apply
#      run: terraform apply -auto-approve ../tf_plan
